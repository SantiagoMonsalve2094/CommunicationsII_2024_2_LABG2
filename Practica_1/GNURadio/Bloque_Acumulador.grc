options:
  parameters:
    author: ''
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: untitled
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Not titled yet
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '32000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 12]
    rotation: 0
    state: enabled
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\nimport numpy as np\nfrom\
      \ gnuradio import gr\nclass blk (gr. sync_block ):\n\tdef __init__ ( self )\
      \ : # only default arguments here\n\t\tgr. sync_block . __init__ (\n\t\t\tself\
      \ ,\n\t\t\tname =\u2019e_Acum \u2019, # will show up in GRC\n\t\t\tin_sig =[\
      \ np. float32 ],\n\t\t\tout_sig =[ np. float32 ]\n\t\t)\n\t\t\n\tdef work (self\
      \ , input_items , output_items ):\n\t\tx = input_items [0] # Senial de entrada\
      \ .\n\t\ty0 = output_items [0] # Senial acumulada\n\t\ty0 [:] = np. cumsum (x)\n\
      \t\treturn len (y)\n"
    affinity: ''
    alias: Bloque_Acumulador
    comment: ''
    example_param: '1.0'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Embedded Python Block', 'blk', [('example_param', '1.0')], [('0',
      'complex', 1)], [('0', 'complex', 1)], 'Embedded Python Block example - a simple
      multiply const', ['example_param'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [656, 292.0]
    rotation: 0
    state: true
connections: []

metadata:
  file_format: 1
  grc_version: 3.9.8.0
